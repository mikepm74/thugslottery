{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport RaffleForm from \"./components/RaffleForm\";\nimport { useQuery } from \"@apollo/client\";\nimport { BITQUERY_INFLOW } from \"./utils/links\";\nimport { vaults, drugsContract, contestAddress } from \"./utils/links\";\n\nfunction App() {\n  _s();\n\n  const ticketsNormalized = {};\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(BITQUERY_INFLOW(contestAddress, drugsContract));\n  if (loading) return \"Loading tx list...\";\n  if (error) return `Error! ${error.message}`;\n\n  const isVault = address => vaults.includes(address); // format winner entries for beefy pickWinner\n\n\n  data.ethereum.transfers.filter(tx => {\n    console.log(isVault(tx.address.address));\n    isVault(tx.address.address);\n  }).map(tx => ticketsNormalized[tx.address.address] = Math.floor(tx.amount));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !loading ? /*#__PURE__*/_jsxDEV(RaffleForm, {\n      ticketsNormalized: ticketsNormalized\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/App.js"],"names":["RaffleForm","useQuery","BITQUERY_INFLOW","vaults","drugsContract","contestAddress","App","ticketsNormalized","loading","error","data","message","isVault","address","includes","ethereum","transfers","filter","tx","console","log","map","Math","floor","amount"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,cAAhC,QAAsD,eAAtD;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,iBAAiB,GAAG,EAA1B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CACvCC,eAAe,CAACG,cAAD,EAAiBD,aAAjB,CADwB,CAAzC;AAIA,MAAII,OAAJ,EAAa,OAAO,oBAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;;AAEX,QAAMC,OAAO,GAAIC,OAAD,IAAaV,MAAM,CAACW,QAAP,CAAgBD,OAAhB,CAA7B,CATa,CAUb;;;AACAH,EAAAA,IAAI,CAACK,QAAL,CAAcC,SAAd,CACGC,MADH,CACWC,EAAD,IAAQ;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACM,EAAE,CAACL,OAAH,CAAWA,OAAZ,CAAnB;AACAD,IAAAA,OAAO,CAACM,EAAE,CAACL,OAAH,CAAWA,OAAZ,CAAP;AACD,GAJH,EAKGQ,GALH,CAMKH,EAAD,IAASX,iBAAiB,CAACW,EAAE,CAACL,OAAH,CAAWA,OAAZ,CAAjB,GAAwCS,IAAI,CAACC,KAAL,CAAWL,EAAE,CAACM,MAAd,CANrD;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACG,CAAChB,OAAD,gBACC,QAAC,UAAD;AAAY,MAAA,iBAAiB,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA,YADD,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA3BQD,G;UAE0BL,Q;;;KAF1BK,G;AA6BT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport RaffleForm from \"./components/RaffleForm\";\nimport { useQuery } from \"@apollo/client\";\nimport { BITQUERY_INFLOW } from \"./utils/links\";\nimport { vaults, drugsContract, contestAddress } from \"./utils/links\";\n\nfunction App() {\n  const ticketsNormalized = {};\n  const { loading, error, data } = useQuery(\n    BITQUERY_INFLOW(contestAddress, drugsContract)\n  );\n\n  if (loading) return \"Loading tx list...\";\n  if (error) return `Error! ${error.message}`;\n\n  const isVault = (address) => vaults.includes(address);\n  // format winner entries for beefy pickWinner\n  data.ethereum.transfers\n    .filter((tx) => {\n      console.log(isVault(tx.address.address));\n      isVault(tx.address.address);\n    })\n    .map(\n      (tx) => (ticketsNormalized[tx.address.address] = Math.floor(tx.amount))\n    );\n\n  return (\n    <div className=\"App\">\n      {!loading ? (\n        <RaffleForm ticketsNormalized={ticketsNormalized}></RaffleForm>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}