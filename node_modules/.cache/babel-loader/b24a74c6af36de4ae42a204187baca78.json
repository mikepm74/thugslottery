{"ast":null,"code":"export default function winners(tickets, blockHash, winners) {\n  const crypto = require(\"crypto\");\n\n  const seedrandom = require(\"seedrandom\");\n\n  const rng = num => seedrandom(crypto.createHash(\"sha256\").update(blockHash).digest(\"hex\"));\n\n  const getTotalTickets = tickets => Object.values(tickets).reduce((a, b) => a + b);\n\n  const pickWinner = (tickets, rng) => {\n    const totalTickets = getTotalTickets(tickets);\n    const winningTicket = Math.floor(rng() * totalTickets);\n    let ticketsCounted = 0;\n\n    for (const key in tickets) {\n      ticketsCounted += tickets[key];\n      if (ticketsCounted >= winningTicket) return key;\n    }\n  }; // Thugs Finance - (5 Prizes) + 1 NFT\n\n\n  console.log(\"Selecting Thugs Finance Winners\");\n  let array = [];\n\n  for (let i = 1; i <= winners; i++) {\n    let winner = pickWinner(tickets, rng(blockhash + i));\n    array.push(winner);\n    console.log(`Thugs winner ${i} ${winner}`, array);\n  }\n\n  console.log();\n  return array;\n}","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/utils/pickWinners.js"],"names":["winners","tickets","blockHash","crypto","require","seedrandom","rng","num","createHash","update","digest","getTotalTickets","Object","values","reduce","a","b","pickWinner","totalTickets","winningTicket","Math","floor","ticketsCounted","key","console","log","array","i","winner","blockhash","push"],"mappings":"AAAA,eAAe,SAASA,OAAT,CAAiBC,OAAjB,EAA0BC,SAA1B,EAAqCF,OAArC,EAA8C;AAC3D,QAAMG,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,QAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;AACA,QAAME,GAAG,GAAIC,GAAD,IAAQF,UAAU,CAC5BF,MAAM,CAACK,UAAP,CAAkB,QAAlB,EAA4BC,MAA5B,CAAmCP,SAAnC,EAA8CQ,MAA9C,CAAqD,KAArD,CAD4B,CAA9B;;AAGA,QAAMC,eAAe,GAAIV,OAAD,IACtBW,MAAM,CAACC,MAAP,CAAcZ,OAAd,EAAuBa,MAAvB,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA5C,CADF;;AAGA,QAAMC,UAAU,GAAG,CAAChB,OAAD,EAAUK,GAAV,KAAkB;AACnC,UAAMY,YAAY,GAAGP,eAAe,CAACV,OAAD,CAApC;AACA,UAAMkB,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWf,GAAG,KAAKY,YAAnB,CAAtB;AAEA,QAAII,cAAc,GAAG,CAArB;;AAEA,SAAK,MAAMC,GAAX,IAAkBtB,OAAlB,EAA2B;AACzBqB,MAAAA,cAAc,IAAIrB,OAAO,CAACsB,GAAD,CAAzB;AACA,UAAID,cAAc,IAAIH,aAAtB,EAAqC,OAAOI,GAAP;AACtC;AACF,GAVD,CAT2D,CAqB3D;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI3B,OAArB,EAA8B2B,CAAC,EAA/B,EAAmC;AACjC,QAAIC,MAAM,GAAGX,UAAU,CAAChB,OAAD,EAAUK,GAAG,CAACuB,SAAS,GAACF,CAAX,CAAb,CAAvB;AACAD,IAAAA,KAAK,CAACI,IAAN,CAAWF,MAAX;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeE,CAAE,IAAGC,MAAO,EAAxC,EAA2CF,KAA3C;AACD;;AACDF,EAAAA,OAAO,CAACC,GAAR;AACA,SAAOC,KAAP;AACD","sourcesContent":["export default function winners(tickets, blockHash, winners) {\n  const crypto = require(\"crypto\");\n  const seedrandom = require(\"seedrandom\");\n  const rng = (num) =>seedrandom(\n    crypto.createHash(\"sha256\").update(blockHash).digest(\"hex\")\n  );\n  const getTotalTickets = (tickets) =>\n    Object.values(tickets).reduce((a, b) => a + b);\n\n  const pickWinner = (tickets, rng) => {\n    const totalTickets = getTotalTickets(tickets);\n    const winningTicket = Math.floor(rng() * totalTickets);\n\n    let ticketsCounted = 0;\n\n    for (const key in tickets) {\n      ticketsCounted += tickets[key];\n      if (ticketsCounted >= winningTicket) return key;\n    }\n  };\n\n  // Thugs Finance - (5 Prizes) + 1 NFT\n  console.log(\"Selecting Thugs Finance Winners\");\n  let array = [];\n  for (let i = 1; i <= winners; i++) {\n    let winner = pickWinner(tickets, rng(blockhash+i));\n    array.push(winner);\n    console.log(`Thugs winner ${i} ${winner}`, array);\n  }\n  console.log();\n  return array;\n}\n"]},"metadata":{},"sourceType":"module"}