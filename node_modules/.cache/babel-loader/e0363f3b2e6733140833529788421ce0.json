{"ast":null,"code":"import { gql } from \"@apollo/client\";\nexport const addressTokenTranfers = address => \"https://api.bscscan.com/api?module=account&action=tokentx&address=\" + address + \"&startblock=0&endblock=999999999&sort=asc\";\nexport const contestAddress = \"0x93E8A4cd2c98B0667BF2AD9C46f7660F390dF348\";\nexport const drugsContract = \"0x339550404ca4d831d12b1b2e4768869997390010\";\nexport const vaults = [\"0xfae4a35305a1dced8303029ac05e51386f667ed8\"];\nexport const BITQUERY_INFLOW = (address, tokenContract) => {\n  let string = `{\n  ethereum(network: bsc) {\n    transfers(options: {offset: 0}, amount: {gt: 0}, receiver: {is: \"0x93E8A4cd2c98B0667BF2AD9C46f7660F390dF348\"}, currency: {is: \"0x339550404ca4d831d12b1b2e4768869997390010\"}, date: {till: \"2021-01-29T00:01:00+00:00\"}) {\n      block {\n        timestamp {\n          time(format: \"%Y-%m-%d %H:%M:%S\")\n        }\n        height\n      }\n      address: sender {\n        address\n      }\n      currency {\n        address\n        symbol\n      }\n      amount\n      transaction {\n        hash\n      }\n      external\n    }\n  }\n}\n\n`;\n  return gql(string);\n};\n_c = BITQUERY_INFLOW;\n\nvar _c;\n\n$RefreshReg$(_c, \"BITQUERY_INFLOW\");","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/utils/links.js"],"names":["gql","addressTokenTranfers","address","contestAddress","drugsContract","vaults","BITQUERY_INFLOW","tokenContract","string"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,OAAD,IAClC,uEACAA,OADA,GAEA,2CAHK;AAKP,OAAO,MAAMC,cAAc,GAAG,4CAAvB;AACP,OAAO,MAAMC,aAAa,GAAG,4CAAtB;AACP,OAAO,MAAMC,MAAM,GAAG,CAAC,4CAAD,CAAf;AAEP,OAAO,MAAMC,eAAe,GAAG,CAACJ,OAAD,EAAUK,aAAV,KAA4B;AACzD,MAAIC,MAAM,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBE;AA0BA,SAAOR,GAAG,CAACQ,MAAD,CAAV;AACD,CA5BM;KAAMF,e","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const addressTokenTranfers = (address) =>\n  \"https://api.bscscan.com/api?module=account&action=tokentx&address=\" +\n  address +\n  \"&startblock=0&endblock=999999999&sort=asc\";\n\nexport const contestAddress = \"0x93E8A4cd2c98B0667BF2AD9C46f7660F390dF348\";\nexport const drugsContract = \"0x339550404ca4d831d12b1b2e4768869997390010\";\nexport const vaults = [\"0xfae4a35305a1dced8303029ac05e51386f667ed8\"];\n\nexport const BITQUERY_INFLOW = (address, tokenContract) => {\n  let string = `{\n  ethereum(network: bsc) {\n    transfers(options: {offset: 0}, amount: {gt: 0}, receiver: {is: \"0x93E8A4cd2c98B0667BF2AD9C46f7660F390dF348\"}, currency: {is: \"0x339550404ca4d831d12b1b2e4768869997390010\"}, date: {till: \"2021-01-29T00:01:00+00:00\"}) {\n      block {\n        timestamp {\n          time(format: \"%Y-%m-%d %H:%M:%S\")\n        }\n        height\n      }\n      address: sender {\n        address\n      }\n      currency {\n        address\n        symbol\n      }\n      amount\n      transaction {\n        hash\n      }\n      external\n    }\n  }\n}\n\n`;\n  return gql(string);\n};\n"]},"metadata":{},"sourceType":"module"}