{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import\"./App.css\";import RaffleForm from\"./components/RaffleForm\";import{useQuery}from\"@apollo/client\";import{BITQUERY_INFLOW}from\"./utils/links\";import{vaults,drugsContract,contestAddress}from\"./utils/links\";function App(){var ticketsNormalized={};var _useQuery=useQuery(BITQUERY_INFLOW(contestAddress,drugsContract)),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;if(loading)return\"Loading tx list...\";if(error)return\"Error! \".concat(error.message);var isVault=function isVault(address){return!vaults.includes(address);};// format winner entries for beefy pickWinner\ndata.ethereum.transfers.filter(function(tx){console.log(isVault(tx.address.address));return isVault(tx.address.address);}).map(function(tx){return ticketsNormalized[tx.address.address]=Math.floor(tx.amount);});return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!loading?/*#__PURE__*/_jsx(RaffleForm,{ticketsNormalized:ticketsNormalized}):null});}export default App;","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/App.js"],"names":["RaffleForm","useQuery","BITQUERY_INFLOW","vaults","drugsContract","contestAddress","App","ticketsNormalized","loading","error","data","message","isVault","address","includes","ethereum","transfers","filter","tx","console","log","map","Math","floor","amount"],"mappings":"2CAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,UAAP,KAAuB,yBAAvB,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,eAAT,KAAgC,eAAhC,CACA,OAASC,MAAT,CAAiBC,aAAjB,CAAgCC,cAAhC,KAAsD,eAAtD,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,iBAAiB,CAAG,EAA1B,CADa,cAEoBN,QAAQ,CACvCC,eAAe,CAACG,cAAD,CAAiBD,aAAjB,CADwB,CAF5B,CAELI,OAFK,WAELA,OAFK,CAEIC,KAFJ,WAEIA,KAFJ,CAEWC,IAFX,WAEWA,IAFX,CAMb,GAAIF,OAAJ,CAAa,MAAO,oBAAP,CACb,GAAIC,KAAJ,CAAW,uBAAiBA,KAAK,CAACE,OAAvB,EAEX,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,OAAD,QAAa,CAACV,MAAM,CAACW,QAAP,CAAgBD,OAAhB,CAAd,EAAhB,CACA;AACAH,IAAI,CAACK,QAAL,CAAcC,SAAd,CACGC,MADH,CACU,SAACC,EAAD,CAAQ,CACdC,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACM,EAAE,CAACL,OAAH,CAAWA,OAAZ,CAAnB,EACA,MAAOD,CAAAA,OAAO,CAACM,EAAE,CAACL,OAAH,CAAWA,OAAZ,CAAd,CACD,CAJH,EAKGQ,GALH,CAMI,SAACH,EAAD,QAASX,CAAAA,iBAAiB,CAACW,EAAE,CAACL,OAAH,CAAWA,OAAZ,CAAjB,CAAwCS,IAAI,CAACC,KAAL,CAAWL,EAAE,CAACM,MAAd,CAAjD,EANJ,EASA,mBACE,YAAK,SAAS,CAAC,KAAf,UACG,CAAChB,OAAD,cACC,KAAC,UAAD,EAAY,iBAAiB,CAAED,iBAA/B,EADD,CAEG,IAHN,EADF,CAOD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import \"./App.css\";\nimport RaffleForm from \"./components/RaffleForm\";\nimport { useQuery } from \"@apollo/client\";\nimport { BITQUERY_INFLOW } from \"./utils/links\";\nimport { vaults, drugsContract, contestAddress } from \"./utils/links\";\n\nfunction App() {\n  const ticketsNormalized = {};\n  const { loading, error, data } = useQuery(\n    BITQUERY_INFLOW(contestAddress, drugsContract)\n  );\n\n  if (loading) return \"Loading tx list...\";\n  if (error) return `Error! ${error.message}`;\n\n  const isVault = (address) => !vaults.includes(address);\n  // format winner entries for beefy pickWinner\n  data.ethereum.transfers\n    .filter((tx) => {\n      console.log(isVault(tx.address.address));\n      return isVault(tx.address.address);\n    })\n    .map(\n      (tx) => (ticketsNormalized[tx.address.address] = Math.floor(tx.amount))\n    );\n\n  return (\n    <div className=\"App\">\n      {!loading ? (\n        <RaffleForm ticketsNormalized={ticketsNormalized}></RaffleForm>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}