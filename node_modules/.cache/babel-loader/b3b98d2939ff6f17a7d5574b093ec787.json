{"ast":null,"code":"export default function winners(ticketList) {}\n\nconst getTotalTickets = tickets => Object.values(tickets).reduce((a, b) => a + b);\n\nconst pickWinner = (tickets, rng) => {\n  const totalTickets = getTotalTickets(tickets);\n  const winningTicket = Math.floor(rng() * totalTickets);\n  let ticketsCounted = 0;\n\n  for (const key in tickets) {\n    ticketsCounted += tickets[key];\n    if (ticketsCounted >= winningTicket) return key;\n  }\n}; // Thugs Finance - (5 Prizes) + 1 NFT\n\n\nconsole.log(\"Selecting Thugs Finance Winners\");\n\nfor (let i = 1; i <= 5; i++) {\n  console.log(`Thugs winner ${i} ${pickWinner(drugsTickets, rng)}`);\n}\n\nconsole.log(\"Thugs NFT\", pickWinner(drugsTickets, rng));\nconsole.log(\"---\");","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/utils/pickWinners.js"],"names":["winners","ticketList","getTotalTickets","tickets","Object","values","reduce","a","b","pickWinner","rng","totalTickets","winningTicket","Math","floor","ticketsCounted","key","console","log","i","drugsTickets"],"mappings":"AACA,eAAe,SAASA,OAAT,CAAiBC,UAAjB,EAA6B,CAAE;;AAE9C,MAAMC,eAAe,GAAIC,OAAD,IACtBC,MAAM,CAACC,MAAP,CAAcF,OAAd,EAAuBG,MAAvB,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA5C,CADF;;AAGA,MAAMC,UAAU,GAAG,CAACN,OAAD,EAAUO,GAAV,KAAkB;AACnC,QAAMC,YAAY,GAAGT,eAAe,CAACC,OAAD,CAApC;AACA,QAAMS,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,KAAKC,YAAnB,CAAtB;AAEA,MAAII,cAAc,GAAG,CAArB;;AAEA,OAAK,MAAMC,GAAX,IAAkBb,OAAlB,EAA2B;AACzBY,IAAAA,cAAc,IAAIZ,OAAO,CAACa,GAAD,CAAzB;AACA,QAAID,cAAc,IAAIH,aAAtB,EAAqC,OAAOI,GAAP;AACtC;AACF,CAVD,C,CAYA;;;AACAC,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeC,CAAE,IAAGV,UAAU,CAACW,YAAD,EAAeV,GAAf,CAAoB,EAA/D;AACD;;AACDO,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBT,UAAU,CAACW,YAAD,EAAeV,GAAf,CAAnC;AACAO,OAAO,CAACC,GAAR,CAAY,KAAZ","sourcesContent":["\nexport default function winners(ticketList) {}\n\nconst getTotalTickets = (tickets) =>\n  Object.values(tickets).reduce((a, b) => a + b);\n\nconst pickWinner = (tickets, rng) => {\n  const totalTickets = getTotalTickets(tickets);\n  const winningTicket = Math.floor(rng() * totalTickets);\n\n  let ticketsCounted = 0;\n\n  for (const key in tickets) {\n    ticketsCounted += tickets[key];\n    if (ticketsCounted >= winningTicket) return key;\n  }\n};\n\n// Thugs Finance - (5 Prizes) + 1 NFT\nconsole.log(\"Selecting Thugs Finance Winners\");\nfor (let i = 1; i <= 5; i++) {\n  console.log(`Thugs winner ${i} ${pickWinner(drugsTickets, rng)}`);\n}\nconsole.log(\"Thugs NFT\", pickWinner(drugsTickets, rng));\nconsole.log(\"---\");\n"]},"metadata":{},"sourceType":"module"}