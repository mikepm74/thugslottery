{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { drugsContract, contestAddress } from \"../utils/links\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery } from \"@apollo/client\";\nimport { BITQUERY_INFLOW } from \"../utils/links\";\nexport default function RaffleForm() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [winningAddresses, setWinningAddresses] = useState([]);\n  const [totalTickets, setTotalTickets] = useState(0);\n  const [alleTickets, setAllTickets] = useState({});\n  const ticketsNormalized = {};\n  useEffect(_s(() => {\n    _s();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(BITQUERY_INFLOW(contestAddress, drugsContract));\n    if (loading) return \"Loading tx list...\";\n    if (error) return `Error! ${error.message}`; // format winner entries for beefy pickWinner\n\n    data.ethereum.transfers.map(tx => ticketsNormalized[tx.address.address] = Math.floor(tx.amount));\n    const list = [];\n    const listOfTickets = Object.keys(ticketsNormalized).map(address => {\n      const amount = ticketsNormalized[address];\n\n      for (let i = 1; i <= amount; i++) {\n        list.push(address);\n      }\n    });\n    setAllTickets(list);\n  }, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  }), []);\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  const handleSubmit = () => {\n    setTotalTickets(list.length);\n    console.log(list.length);\n    const rand = getRandomInt(totalTickets); // set winner and substract 1 ticket\n\n    const winningAddress = list[rand];\n    list.splice(rand, 1);\n    console.log(list.length);\n    setWinningAddresses([...winningAddresses, winningAddress]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      children: \"WHO'S MY HOMIE???\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tickets left: \", totalTickets]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this), !loading ? /*#__PURE__*/_jsxDEV(\"table\", {\n        width: \"420px\",\n        style: {\n          backgroundColor: \"rgba(255,255,255,0.7)\",\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Winners!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(winningAddresses).map((address, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, address + i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RaffleForm, \"eCQP1R1gtfxEdjipmnOYEpe7URA=\");\n\n_c = RaffleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaffleForm\");","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx"],"names":["React","useState","useEffect","drugsContract","contestAddress","Button","useQuery","BITQUERY_INFLOW","RaffleForm","winningAddresses","setWinningAddresses","totalTickets","setTotalTickets","alleTickets","setAllTickets","ticketsNormalized","loading","error","data","message","ethereum","transfers","map","tx","address","Math","floor","amount","list","listOfTickets","Object","keys","i","push","getRandomInt","max","random","handleSubmit","length","console","log","rand","winningAddress","splice","backgroundColor","border","values"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { drugsContract, contestAddress } from \"../utils/links\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery } from \"@apollo/client\";\nimport { BITQUERY_INFLOW } from \"../utils/links\";\n\nexport default function RaffleForm() {\n  const [winningAddresses, setWinningAddresses] = useState([]);\n  const [totalTickets, setTotalTickets] = useState(0);\n  const [alleTickets, setAllTickets] = useState({});\n  const ticketsNormalized = {};\n\n  useEffect(() => {\n    const { loading, error, data } = useQuery(\n      BITQUERY_INFLOW(contestAddress, drugsContract)\n    );\n    if (loading) return \"Loading tx list...\";\n    if (error) return `Error! ${error.message}`;\n    // format winner entries for beefy pickWinner\n    data.ethereum.transfers.map(\n      (tx) => (ticketsNormalized[tx.address.address] = Math.floor(tx.amount))\n    );\n    const list = [];\n    const listOfTickets = Object.keys(ticketsNormalized).map((address) => {\n      const amount = ticketsNormalized[address];\n      for (let i = 1; i <= amount; i++) {\n        list.push(address);\n      }\n    });\n    setAllTickets(list);\n  }, []);\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  const handleSubmit = () => {\n    setTotalTickets(list.length);\n    console.log(list.length);\n    const rand = getRandomInt(totalTickets);\n    // set winner and substract 1 ticket\n    const winningAddress = list[rand];\n    list.splice(rand, 1);\n    console.log(list.length);\n    setWinningAddresses([...winningAddresses, winningAddress]);\n  };\n\n  return (\n    <center>\n      <br /> <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        WHO'S MY HOMIE???\n      </Button>\n      <p>Tickets left: {totalTickets}</p>\n      <br />\n      <div>\n        <br /> <br />\n        {!loading ? (\n          <table\n            width=\"420px\"\n            style={{\n              backgroundColor: \"rgba(255,255,255,0.7)\",\n              border: \"1px solid black\",\n            }}\n          >\n            <thead>\n              <tr>\n                <td>Winners!</td>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(winningAddresses).map((address, i) => {\n                return (\n                  <tr key={address + i}>\n                    <td>{i}</td>\n                    <td>{address}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        ) : null}\n      </div>\n    </center>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}