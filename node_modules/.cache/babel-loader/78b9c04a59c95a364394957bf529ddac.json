{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { drugsContract, contestAddress } from \"../utils/links\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery } from \"@apollo/client\";\nimport { BITQUERY_INFLOW } from \"../utils/links\";\nexport default function RaffleForm() {\n  _s();\n\n  const [winningAddresses, setWinningAddresses] = useState([]);\n  const [totalTickets, setTotalTickets] = useState(0);\n  const [allTickets, setAllTickets] = useState([]);\n  const ticketsNormalized = {};\n  useEffect(() => {\n    !loading && allTickets !== [] ? setAllTickets(list) : null;\n  }, [loading]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(BITQUERY_INFLOW(contestAddress, drugsContract));\n  if (loading) return \"Loading tx list...\";\n  if (error) return `Error! ${error.message}`; // format winner entries for beefy pickWinner\n\n  data.ethereum.transfers.map(tx => ticketsNormalized[tx.address.address] = Math.floor(tx.amount));\n  const list = [];\n  const listOfTickets = Object.keys(ticketsNormalized).map(address => {\n    const amount = ticketsNormalized[address];\n\n    for (let i = 1; i <= amount; i++) {\n      list.push(address);\n    }\n  });\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  const handleSubmit = () => {\n    setTotalTickets(list.length);\n    console.log(list.length);\n    const rand = getRandomInt(totalTickets); // set winner and substract 1 ticket\n\n    const winningAddress = list[rand];\n    list.splice(rand, 1);\n    console.log(list.length);\n    setWinningAddresses([...winningAddresses, winningAddress]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      children: \"WHO'S MY HOMIE???\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tickets left: \", totalTickets]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this), !loading ? /*#__PURE__*/_jsxDEV(\"table\", {\n        width: \"420px\",\n        style: {\n          backgroundColor: \"rgba(255,255,255,0.7)\",\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Winners!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(winningAddresses).map((address, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, address + i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RaffleForm, \"d+2CYVmB1DaPRFlb0cqT2eQgKYo=\", false, function () {\n  return [useQuery];\n});\n\n_c = RaffleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaffleForm\");","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx"],"names":["React","useState","useEffect","drugsContract","contestAddress","Button","useQuery","BITQUERY_INFLOW","RaffleForm","winningAddresses","setWinningAddresses","totalTickets","setTotalTickets","allTickets","setAllTickets","ticketsNormalized","loading","list","error","data","message","ethereum","transfers","map","tx","address","Math","floor","amount","listOfTickets","Object","keys","i","push","getRandomInt","max","random","handleSubmit","length","console","log","rand","winningAddress","splice","backgroundColor","border","values"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { drugsContract, contestAddress } from \"../utils/links\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery } from \"@apollo/client\";\nimport { BITQUERY_INFLOW } from \"../utils/links\";\n\nexport default function RaffleForm() {\n  const [winningAddresses, setWinningAddresses] = useState([]);\n  const [totalTickets, setTotalTickets] = useState(0);\n  const [allTickets, setAllTickets] = useState([]);\n  const ticketsNormalized = {};\n\n  useEffect(() => {\n    !loading && allTickets !== [] ? setAllTickets(list) : null;\n  }, [loading]);\n\n  const { loading, error, data } = useQuery(\n    BITQUERY_INFLOW(contestAddress, drugsContract)\n  );\n  if (loading) return \"Loading tx list...\";\n  if (error) return `Error! ${error.message}`;\n\n  // format winner entries for beefy pickWinner\n  data.ethereum.transfers.map(\n    (tx) => (ticketsNormalized[tx.address.address] = Math.floor(tx.amount))\n  );\n  const list = [];\n  const listOfTickets = Object.keys(ticketsNormalized).map((address) => {\n    const amount = ticketsNormalized[address];\n    for (let i = 1; i <= amount; i++) {\n      list.push(address);\n    }\n  });\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  const handleSubmit = () => {\n    setTotalTickets(list.length);\n    console.log(list.length);\n    const rand = getRandomInt(totalTickets);\n    // set winner and substract 1 ticket\n    const winningAddress = list[rand];\n    list.splice(rand, 1);\n    console.log(list.length);\n    setWinningAddresses([...winningAddresses, winningAddress]);\n  };\n\n  return (\n    <center>\n      <br /> <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        WHO'S MY HOMIE???\n      </Button>\n      <p>Tickets left: {totalTickets}</p>\n      <br />\n      <div>\n        <br /> <br />\n        {!loading ? (\n          <table\n            width=\"420px\"\n            style={{\n              backgroundColor: \"rgba(255,255,255,0.7)\",\n              border: \"1px solid black\",\n            }}\n          >\n            <thead>\n              <tr>\n                <td>Winners!</td>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(winningAddresses).map((address, i) => {\n                return (\n                  <tr key={address + i}>\n                    <td>{i}</td>\n                    <td>{address}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        ) : null}\n      </div>\n    </center>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}