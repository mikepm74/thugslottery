{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nexport default function RaffleForm({\n  ticketsNormalized\n}) {\n  _s();\n\n  const [winningAddresses, setWinningAddresses] = useState([]);\n  const [totalTickets, setTotalTickets] = useState(0);\n  const list = [];\n  useEffect(() => {\n    const setList = () => {\n      if (list.length !== 0) {\n        Object.keys(ticketsNormalized).map(address => {\n          const amount = ticketsNormalized[address];\n\n          for (let i = 1; i <= amount; i++) {\n            list.push(address);\n          }\n        });\n      }\n    };\n\n    setList();\n    console.log(list);\n  }, [ticketsNormalized]);\n\n  const handleSubmit = () => {\n    setTotalTickets(list.length);\n    const rand = Math.floor(Math.random() * Math.floor(totalTickets)); // set winner and substract 1 ticket\n\n    const winningAddress = list[rand];\n    console.log(ticketsNormalized[winningAddress]);\n    ticketsNormalized[winningAddress] = ticketsNormalized[winningAddress] - 1;\n    console.log(ticketsNormalized[winningAddress]);\n    setWinningAddresses([...winningAddresses, winningAddress]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      children: \"DRAW WINNER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tickets left: \", totalTickets]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        width: \"420px\",\n        style: {\n          backgroundColor: \"rgba(255,255,255,0.7)\",\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"LUCKY FEW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(winningAddresses).map((address, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"#\", i + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, address + i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RaffleForm, \"o0D2SyDAb0AfbxOkgIcC7Mwr+2Q=\");\n\n_c = RaffleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaffleForm\");","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx"],"names":["React","useState","useEffect","Button","RaffleForm","ticketsNormalized","winningAddresses","setWinningAddresses","totalTickets","setTotalTickets","list","setList","length","Object","keys","map","address","amount","i","push","console","log","handleSubmit","rand","Math","floor","random","winningAddress","backgroundColor","border","values"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function RaffleForm({ ticketsNormalized }) {\n  const [winningAddresses, setWinningAddresses] = useState([]);\n  const [totalTickets, setTotalTickets] = useState(0);\n\n  const list = [];\n\n  useEffect(() => {\n    const setList = () => {\n      if (list.length !== 0) {\n        Object.keys(ticketsNormalized).map((address) => {\n          const amount = ticketsNormalized[address];\n          for (let i = 1; i <= amount; i++) {\n            list.push(address);\n          }\n        });\n      }\n    };\n    setList();\n    console.log(list);\n  }, [ticketsNormalized]);\n\n  const handleSubmit = () => {\n    setTotalTickets(list.length);\n    const rand = Math.floor(Math.random() * Math.floor(totalTickets));\n    // set winner and substract 1 ticket\n    const winningAddress = list[rand];\n    console.log(ticketsNormalized[winningAddress]);\n    ticketsNormalized[winningAddress] = ticketsNormalized[winningAddress] - 1;\n    console.log(ticketsNormalized[winningAddress]);\n    setWinningAddresses([...winningAddresses, winningAddress]);\n  };\n\n  return (\n    <center>\n      <br /> <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        DRAW WINNER\n      </Button>\n      <p>Tickets left: {totalTickets}</p>\n      <br />\n      <div>\n        <br /> <br />\n        <table\n          width=\"420px\"\n          style={{\n            backgroundColor: \"rgba(255,255,255,0.7)\",\n            border: \"1px solid black\",\n          }}\n        >\n          <thead>\n            <tr>\n              <td>LUCKY FEW</td>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.values(winningAddresses).map((address, i) => {\n              return (\n                <tr key={address + i}>\n                  <td>#{i + 1}</td>\n                  <td>{address}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </center>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}