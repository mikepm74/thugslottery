{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { drugsContract, contestAddress } from \"../utils/links\";\nimport AddressTXList from \"./AddressTXList\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery } from \"@apollo/client\";\nimport { BITQUERY_INFLOW } from \"../utils/links\";\nimport winners from \"../utils/pickWinners\";\nexport default function RaffleForm() {\n  _s();\n\n  const [address, setAddress] = useState(contestAddress);\n  const [ticketRatio, setTickerRatio] = useState(1);\n  const [tokenContract, setTokenContract] = useState(drugsContract);\n  const [numOfWinners, setNumOfWinners] = useState(1);\n  const [hasInfo, setHasInfo] = useState(false);\n\n  const handleSubmit = () => {\n    setHasInfo(!hasInfo);\n  };\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(BITQUERY_INFLOW(address, tokenContract));\n  if (loading) return \"Loading tx list...\";\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this), hasInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"address: \", address, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"contract: \", tokenContract, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ratio: \", ticketRatio]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"winners: \", numOfWinners]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      children: \"get winner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddressTXList, {\n      address: address,\n      tokenContract: tokenContract,\n      ticketRatio: ticketRatio,\n      numOfWinners: numOfWinners\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RaffleForm, \"GHiZf61FHO5hCZb4g8YiFCw58gI=\", false, function () {\n  return [useQuery];\n});\n\n_c = RaffleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaffleForm\");","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx"],"names":["React","useState","drugsContract","contestAddress","AddressTXList","Button","useQuery","BITQUERY_INFLOW","winners","RaffleForm","address","setAddress","ticketRatio","setTickerRatio","tokenContract","setTokenContract","numOfWinners","setNumOfWinners","hasInfo","setHasInfo","handleSubmit","loading","error","data","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,gBAA9C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACE,cAAD,CAAtC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAACC,aAAD,CAAlD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMmB,YAAY,GAAG,MAAM;AACzBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BjB,QAAQ,CACvCC,eAAe,CAACG,OAAD,EAAUI,aAAV,CADwB,CAAzC;AAGA,MAAIO,OAAJ,EAAa,OAAO,oBAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,oBAOS;AAAA;AAAA;AAAA;AAAA,YAPT,EAQGN,OAAO,gBACN;AAAA,8BACE;AAAA,gCAAaR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,iCAAcI,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,8BAAWF,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,gCAAaI,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAOJ,IAfN,eAgBE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAEI,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAmBE;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE,QAAC,aAAD;AAEE,MAAA,OAAO,EAAEV,OAFX;AAGE,MAAA,aAAa,EAAEI,aAHjB;AAIE,MAAA,WAAW,EAAEF,WAJf;AAKE,MAAA,YAAY,EAAEI;AALhB,OACO,CADP;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA/CuBP,U;UAWWH,Q;;;KAXXG,U","sourcesContent":["import React, { useState } from \"react\";\nimport { drugsContract, contestAddress } from \"../utils/links\";\nimport AddressTXList from \"./AddressTXList\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery } from \"@apollo/client\";\nimport { BITQUERY_INFLOW } from \"../utils/links\";\nimport winners from \"../utils/pickWinners\";\n\nexport default function RaffleForm() {\n  const [address, setAddress] = useState(contestAddress);\n  const [ticketRatio, setTickerRatio] = useState(1);\n  const [tokenContract, setTokenContract] = useState(drugsContract);\n  const [numOfWinners, setNumOfWinners] = useState(1);\n  const [hasInfo, setHasInfo] = useState(false);\n\n  const handleSubmit = () => {\n    setHasInfo(!hasInfo);\n  };\n\n  const { loading, error, data } = useQuery(\n    BITQUERY_INFLOW(address, tokenContract)\n  );\n  if (loading) return \"Loading tx list...\";\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div>\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br /> <br />\n      {hasInfo ? (\n        <div>\n          <p>address: {address} </p>\n          <p>contract: {tokenContract} </p>\n          <p>ratio: {ticketRatio}</p>\n          <p>winners: {numOfWinners}</p>\n        </div>\n      ) : null}\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        get winner\n      </Button>\n      <br />\n      <AddressTXList\n        key={1}\n        address={address}\n        tokenContract={tokenContract}\n        ticketRatio={ticketRatio}\n        numOfWinners={numOfWinners}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}