{"ast":null,"code":"export default function winners(tickets, blockHash, winners) {\n  const crypto = require(\"crypto\");\n\n  const seedrandom = require(\"seedrandom\");\n\n  const rng = seedrandom(crypto.createHash(\"sha256\").update(blockHash).digest(\"hex\"));\n\n  const getTotalTickets = tickets => Object.values(tickets).reduce((a, b) => a + b);\n\n  const pickWinner = (tickets, rng) => {\n    const totalTickets = getTotalTickets(tickets);\n    const winningTicket = Math.floor(rng() * totalTickets);\n    let ticketsCounted = 0;\n\n    for (const key in tickets) {\n      ticketsCounted += tickets[key];\n      if (ticketsCounted >= winningTicket) return key;\n    }\n  }; // Thugs Finance - (5 Prizes) + 1 NFT\n\n\n  console.log(\"Selecting Thugs Finance Winners\");\n  let array = [];\n\n  for (let i = 1; i <= winners; i++) {\n    array.push();\n    console.log(`Thugs winner ${i} ${pickWinner(tickets, rng)}`);\n  }\n\n  console.log(\"---\");\n}","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/utils/pickWinners.js"],"names":["winners","tickets","blockHash","crypto","require","seedrandom","rng","createHash","update","digest","getTotalTickets","Object","values","reduce","a","b","pickWinner","totalTickets","winningTicket","Math","floor","ticketsCounted","key","console","log","array","i","push"],"mappings":"AAAA,eAAe,SAASA,OAAT,CAAiBC,OAAjB,EAA0BC,SAA1B,EAAqCF,OAArC,EAA8C;AAC3D,QAAMG,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,QAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;AACA,QAAME,GAAG,GAAGD,UAAU,CACpBF,MAAM,CAACI,UAAP,CAAkB,QAAlB,EAA4BC,MAA5B,CAAmCN,SAAnC,EAA8CO,MAA9C,CAAqD,KAArD,CADoB,CAAtB;;AAGA,QAAMC,eAAe,GAAIT,OAAD,IACtBU,MAAM,CAACC,MAAP,CAAcX,OAAd,EAAuBY,MAAvB,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA5C,CADF;;AAGA,QAAMC,UAAU,GAAG,CAACf,OAAD,EAAUK,GAAV,KAAkB;AACnC,UAAMW,YAAY,GAAGP,eAAe,CAACT,OAAD,CAApC;AACA,UAAMiB,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWd,GAAG,KAAKW,YAAnB,CAAtB;AAEA,QAAII,cAAc,GAAG,CAArB;;AAEA,SAAK,MAAMC,GAAX,IAAkBrB,OAAlB,EAA2B;AACzBoB,MAAAA,cAAc,IAAIpB,OAAO,CAACqB,GAAD,CAAzB;AACA,UAAID,cAAc,IAAIH,aAAtB,EAAqC,OAAOI,GAAP;AACtC;AACF,GAVD,CAT2D,CAqB3D;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI1B,OAArB,EAA8B0B,CAAC,EAA/B,EAAmC;AACrCD,IAAAA,KAAK,CAACE,IAAN;AACIJ,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeE,CAAE,IAAGV,UAAU,CAACf,OAAD,EAAUK,GAAV,CAAe,EAA1D;AACD;;AACDiB,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD","sourcesContent":["export default function winners(tickets, blockHash, winners) {\n  const crypto = require(\"crypto\");\n  const seedrandom = require(\"seedrandom\");\n  const rng = seedrandom(\n    crypto.createHash(\"sha256\").update(blockHash).digest(\"hex\")\n  );\n  const getTotalTickets = (tickets) =>\n    Object.values(tickets).reduce((a, b) => a + b);\n\n  const pickWinner = (tickets, rng) => {\n    const totalTickets = getTotalTickets(tickets);\n    const winningTicket = Math.floor(rng() * totalTickets);\n\n    let ticketsCounted = 0;\n\n    for (const key in tickets) {\n      ticketsCounted += tickets[key];\n      if (ticketsCounted >= winningTicket) return key;\n    }\n  };\n\n  // Thugs Finance - (5 Prizes) + 1 NFT\n  console.log(\"Selecting Thugs Finance Winners\");\n  let array = [];\n  for (let i = 1; i <= winners; i++) {\narray.push()\n    console.log(`Thugs winner ${i} ${pickWinner(tickets, rng)}`);\n  }\n  console.log(\"---\");\n}\n"]},"metadata":{},"sourceType":"module"}