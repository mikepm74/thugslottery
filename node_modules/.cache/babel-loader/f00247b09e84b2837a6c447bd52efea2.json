{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nexport default function RaffleForm({\n  ticketsNormalized\n}) {\n  _s();\n\n  const [winningAddresses, setWinningAddresses] = useState([]);\n  const [winner, setWinner] = useState(\"GOOD LUCK G\");\n  const [totalTickets, setTotalTickets] = useState(0);\n  const [ticketsArray, setTicketsArray] = useState([]);\n  const winnerStyle = {\n    //backgroundColor: \"darkblue\",\n    color: \"white\"\n  };\n\n  function shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  } // load tickets\n\n\n  useEffect(() => {\n    const list = [];\n\n    const setList = () => {\n      Object.keys(ticketsNormalized).map(address => {\n        const amount = ticketsNormalized[address];\n\n        for (let i = 1; i <= amount; i++) {\n          list.push(address);\n        }\n      });\n    };\n\n    setList();\n    shuffle(list);\n    setTicketsArray(list);\n    setTotalTickets(list.length);\n  }, [ticketsNormalized]);\n\n  const handleSubmit = () => {\n    setTotalTickets(ticketsArray.length);\n    const rand = Math.floor(Math.random() * Math.floor(totalTickets));\n    console.log(rand); // set winner and substract 1 ticket\n\n    const winningAddress = ticketsArray[rand];\n    setWinner(winningAddress);\n    setWinningAddresses([...winningAddresses, winningAddress]);\n    ticketsArray.splice(rand, 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      width: \"420px\",\n      style: {\n        backgroundColor: \"rgba(255,255,255,0.7)\",\n        border: \"1px solid black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      children: winningAddresses.length > 0 ? \"DRAW WINNER\" : \"START \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: winnerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tickets left: \", totalTickets]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), winningAddresses.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        width: \"420px\",\n        style: {\n          backgroundColor: \"rgba(255,255,255,0.7)\",\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"LUCKY FEW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(winningAddresses).map((address, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)]\n            }, address + i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RaffleForm, \"tPo0zIYI3f/4Y7y8+A9+mhtO2nM=\");\n\n_c = RaffleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaffleForm\");","map":{"version":3,"sources":["/home/ok/Nextcloud/code/THUGS/50-50-app/50-50/src/components/RaffleForm.jsx"],"names":["React","useState","useEffect","Button","RaffleForm","ticketsNormalized","winningAddresses","setWinningAddresses","winner","setWinner","totalTickets","setTotalTickets","ticketsArray","setTicketsArray","winnerStyle","color","shuffle","array","sort","Math","random","list","setList","Object","keys","map","address","amount","i","push","length","handleSubmit","rand","floor","console","log","winningAddress","splice","backgroundColor","border","values"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function RaffleForm({ ticketsNormalized }) {\n  const [winningAddresses, setWinningAddresses] = useState([]);\n  const [winner, setWinner] = useState(\"GOOD LUCK G\");\n  const [totalTickets, setTotalTickets] = useState(0);\n  const [ticketsArray, setTicketsArray] = useState([]);\n  const winnerStyle = {\n    //backgroundColor: \"darkblue\",\n    color: \"white\",\n  };\n\n  function shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  }\n  // load tickets\n  useEffect(() => {\n    const list = [];\n    const setList = () => {\n      Object.keys(ticketsNormalized).map((address) => {\n        const amount = ticketsNormalized[address];\n        for (let i = 1; i <= amount; i++) {\n          list.push(address);\n        }\n      });\n    };\n    setList();\n    shuffle(list);\n    setTicketsArray(list);\n    setTotalTickets(list.length);\n  }, [ticketsNormalized]);\n\n  const handleSubmit = () => {\n    setTotalTickets(ticketsArray.length);\n    const rand = Math.floor(Math.random() * Math.floor(totalTickets));\n    console.log(rand);\n    // set winner and substract 1 ticket\n    const winningAddress = ticketsArray[rand];\n    setWinner(winningAddress);\n    setWinningAddresses([...winningAddresses, winningAddress]);\n    ticketsArray.splice(rand, 1);\n  };\n\n  return (\n    <center>\n      <br /> <br />\n      <table\n        width=\"420px\"\n        style={{\n          backgroundColor: \"rgba(255,255,255,0.7)\",\n          border: \"1px solid black\",\n        }}\n      >\n        <tbody><tr><td></td></tr>\n         \n        </tbody>\n      </table>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        {winningAddresses.length > 0 ? \"DRAW WINNER\" : \"START \"}\n      </Button>\n      <div style={winnerStyle}>\n        <p>Tickets left: {totalTickets}</p>\n      </div>{\" \"}\n      <br />\n      <div>\n        <br />\n        {winningAddresses.length > 0 ? (\n          <table\n            width=\"420px\"\n            style={{\n              backgroundColor: \"rgba(255,255,255,0.7)\",\n              border: \"1px solid black\",\n            }}\n          >\n            <thead>\n              <tr>\n                <td>LUCKY FEW</td>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.values(winningAddresses).map((address, i) => {\n                return (\n                  <tr key={address + i}>\n                    <td>{i + 1}</td>\n                    <td>{address}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        ) : null}\n      </div>\n    </center>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}